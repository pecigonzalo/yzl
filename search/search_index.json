{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Yzl (pronounced easel ) stands for YAML Zero-Language. It's a pragmatic template-less approach to YAML generation powered by F#. Working with docs","title":"Home"},{"location":"docs/","text":"Working with docs Publish ./publish-docs.sh Serve locally ./serve-docs.sh Building API docs The docs are built using MkDocs and API Reference is generated with FSharp.Formatting.CommandTool . At present the process is experimental and uses my fork of FSharp.Formatting . Generating API docs: ./build-fsdocs.sh ${ROOT_URL}","title":"Working with docs"},{"location":"docs/#working-with-docs","text":"","title":"Working with docs"},{"location":"docs/#publish","text":"./publish-docs.sh","title":"Publish"},{"location":"docs/#serve-locally","text":"./serve-docs.sh","title":"Serve locally"},{"location":"docs/#building-api-docs","text":"The docs are built using MkDocs and API Reference is generated with FSharp.Formatting.CommandTool . At present the process is experimental and uses my fork of FSharp.Formatting . Generating API docs: ./build-fsdocs.sh ${ROOT_URL}","title":"Building API docs"},{"location":"tutorial/","text":"Tutorial You can play with Yzl in dotnet fsi . Run dotnet fsi and reference Yzl NuGet and open the Yzl.Core namespace: #r \"nuget: Yzl\"; open Yzl.Core;; The augmentation operator Yzl uses ! as an operator that augments (or elevates) simple F# types to Yzl.Node Scalar Yaml 5 Yzl ! 5 |> Yzl.render Homogenous sequence YAML - 1 - 2 - 3 Yzl Common F# lists are rendered as sequences. ! [1; 2; 3] |> Yzl.render Heterogenous sequence YAML - true - 2.0 - three Yzl To render a heterogenous sequence every element must be preceded by the augmentation operator ( ! ) ! [ ! true; ! 2.0; ! \"three\"] |> Yzl.render Named value (key-value pair) YAML language: F# Yzl let language (x:string) = Yzl.str \"language\" x;; ! (language \"F#\" ) |> Yzl.render;; In a non-interactive context the first line of the above can be simplified to: let language = Yzl.str \"language\"","title":"Tutorial"},{"location":"tutorial/#tutorial","text":"You can play with Yzl in dotnet fsi . Run dotnet fsi and reference Yzl NuGet and open the Yzl.Core namespace: #r \"nuget: Yzl\"; open Yzl.Core;;","title":"Tutorial"},{"location":"tutorial/#the-augmentation-operator","text":"Yzl uses ! as an operator that augments (or elevates) simple F# types to Yzl.Node","title":"The augmentation operator"},{"location":"tutorial/#scalar","text":"","title":"Scalar"},{"location":"tutorial/#yaml","text":"5","title":"Yaml"},{"location":"tutorial/#yzl","text":"! 5 |> Yzl.render","title":"Yzl"},{"location":"tutorial/#homogenous-sequence","text":"","title":"Homogenous sequence"},{"location":"tutorial/#yaml_1","text":"- 1 - 2 - 3","title":"YAML"},{"location":"tutorial/#yzl_1","text":"Common F# lists are rendered as sequences. ! [1; 2; 3] |> Yzl.render","title":"Yzl"},{"location":"tutorial/#heterogenous-sequence","text":"","title":"Heterogenous sequence"},{"location":"tutorial/#yaml_2","text":"- true - 2.0 - three","title":"YAML"},{"location":"tutorial/#yzl_2","text":"To render a heterogenous sequence every element must be preceded by the augmentation operator ( ! ) ! [ ! true; ! 2.0; ! \"three\"] |> Yzl.render","title":"Yzl"},{"location":"tutorial/#named-value-key-value-pair","text":"","title":"Named value (key-value pair)"},{"location":"tutorial/#yaml_3","text":"language: F#","title":"YAML"},{"location":"tutorial/#yzl_3","text":"let language (x:string) = Yzl.str \"language\" x;; ! (language \"F#\" ) |> Yzl.render;; In a non-interactive context the first line of the above can be simplified to: let language = Yzl.str \"language\"","title":"Yzl"},{"location":"reference/","text":"API Reference Available Namespaces Yzl.Core - Yzl core modules","title":"API Reference"},{"location":"reference/#api-reference","text":"","title":"API Reference"},{"location":"reference/#available-namespaces","text":"Yzl.Core - Yzl core modules","title":"Available Namespaces"},{"location":"reference/yzl-core-operators/","text":"Operators Module Namespace: Yzl.Core Assembly: Yzl.dll Functions and values Function or value Description Source ! a Augment to Yzl Node Parameters a : ^a Returns: Node !> value Folded string Parameters value : string Returns: Str !>+ value Folded keep string Parameters value : string Returns: Str !>- value Folded strip string Parameters value : string Returns: Str !| value Literal string Parameters value : string Returns: Str !|+ value Literal keep string Parameters value : string Returns: Str !|- value Literal strip string Parameters value : string Returns: Str","title":"Yzl core operators"},{"location":"reference/yzl-core-operators/#operators-module","text":"Namespace: Yzl.Core Assembly: Yzl.dll","title":"Operators Module"},{"location":"reference/yzl-core-operators/#functions-and-values","text":"Function or value Description Source ! a Augment to Yzl Node Parameters a : ^a Returns: Node !> value Folded string Parameters value : string Returns: Str !>+ value Folded keep string Parameters value : string Returns: Str !>- value Folded strip string Parameters value : string Returns: Str !| value Literal string Parameters value : string Returns: Str !|+ value Literal keep string Parameters value : string Returns: Str !|- value Literal strip string Parameters value : string Returns: Str","title":"Functions and values"},{"location":"reference/yzl-core-yzl-name/","text":"Yzl.Name Type Namespace: Yzl.Core Assembly: Yzl.dll Parent Module: Yzl Base Type: obj All Interfaces: IEquatable < Name > , IStructuralEquatable , IComparable < Name > , IComparable , IStructuralComparable Represents the key in a YAML key-value pair Union cases Union case Description Source Name name Parameters name : string","title":"Yzl core yzl name"},{"location":"reference/yzl-core-yzl-name/#yzlname-type","text":"Namespace: Yzl.Core Assembly: Yzl.dll Parent Module: Yzl Base Type: obj All Interfaces: IEquatable < Name > , IStructuralEquatable , IComparable < Name > , IComparable , IStructuralComparable Represents the key in a YAML key-value pair","title":"Yzl.Name Type"},{"location":"reference/yzl-core-yzl-name/#union-cases","text":"Union case Description Source Name name Parameters name : string","title":"Union cases"},{"location":"reference/yzl-core-yzl-namednode/","text":"Yzl.NamedNode Type Namespace: Yzl.Core Assembly: Yzl.dll Parent Module: Yzl Base Type: obj All Interfaces: IEquatable < NamedNode > , IStructuralEquatable , IComparable < NamedNode > , IComparable , IStructuralComparable YAML key-value pair Union cases Union case Description Source Named( name, node ) Parameters name : Name node : Node","title":"Yzl core yzl namednode"},{"location":"reference/yzl-core-yzl-namednode/#yzlnamednode-type","text":"Namespace: Yzl.Core Assembly: Yzl.dll Parent Module: Yzl Base Type: obj All Interfaces: IEquatable < NamedNode > , IStructuralEquatable , IComparable < NamedNode > , IComparable , IStructuralComparable YAML key-value pair","title":"Yzl.NamedNode Type"},{"location":"reference/yzl-core-yzl-namednode/#union-cases","text":"Union case Description Source Named( name, node ) Parameters name : Name node : Node","title":"Union cases"},{"location":"reference/yzl-core-yzl-node/","text":"Yzl.Node Type Namespace: Yzl.Core Assembly: Yzl.dll Parent Module: Yzl Base Type: obj All Interfaces: IEquatable < Node > , IStructuralEquatable , IComparable < Node > , IComparable , IStructuralComparable YAML node types Union cases Union case Description Source MapNode NamedNode list YAML mapping Parameters Item : NamedNode list NoNode Node with no representation Scalar Scalar YAML scalar Parameters Item : Scalar SeqNode Node list YAML sequence Parameters Item : Node list Static members Static member Description Source op_Implicit source Parameters source : NamedNode Returns: Node op_Implicit source Parameters source : Node Returns: Node op_Implicit source Parameters source : string list Returns: Node op_Implicit source Parameters source : bool list Returns: Node op_Implicit source Parameters source : double list Returns: Node op_Implicit source Parameters source : int list Returns: Node op_Implicit source Parameters source : NamedNode list Returns: Node op_Implicit source Parameters source : Node list Returns: Node op_Implicit source Parameters source : Str Returns: Node op_Implicit source Parameters source : string Returns: Node op_Implicit source Parameters source : bool Returns: Node op_Implicit source Parameters source : double Returns: Node op_Implicit source Parameters source : int Returns: Node","title":"Yzl core yzl node"},{"location":"reference/yzl-core-yzl-node/#yzlnode-type","text":"Namespace: Yzl.Core Assembly: Yzl.dll Parent Module: Yzl Base Type: obj All Interfaces: IEquatable < Node > , IStructuralEquatable , IComparable < Node > , IComparable , IStructuralComparable YAML node types","title":"Yzl.Node Type"},{"location":"reference/yzl-core-yzl-node/#union-cases","text":"Union case Description Source MapNode NamedNode list YAML mapping Parameters Item : NamedNode list NoNode Node with no representation Scalar Scalar YAML scalar Parameters Item : Scalar SeqNode Node list YAML sequence Parameters Item : Node list","title":"Union cases"},{"location":"reference/yzl-core-yzl-node/#static-members","text":"Static member Description Source op_Implicit source Parameters source : NamedNode Returns: Node op_Implicit source Parameters source : Node Returns: Node op_Implicit source Parameters source : string list Returns: Node op_Implicit source Parameters source : bool list Returns: Node op_Implicit source Parameters source : double list Returns: Node op_Implicit source Parameters source : int list Returns: Node op_Implicit source Parameters source : NamedNode list Returns: Node op_Implicit source Parameters source : Node list Returns: Node op_Implicit source Parameters source : Str Returns: Node op_Implicit source Parameters source : string Returns: Node op_Implicit source Parameters source : bool Returns: Node op_Implicit source Parameters source : double Returns: Node op_Implicit source Parameters source : int Returns: Node","title":"Static members"},{"location":"reference/yzl-core-yzl-renderoptions/","text":"Yzl.RenderOptions Type Namespace: Yzl.Core Assembly: Yzl.dll Parent Module: Yzl Base Type: obj All Interfaces: IEquatable < RenderOptions > , IStructuralEquatable , IComparable < RenderOptions > , IComparable , IStructuralComparable YAML rendering options Record fields Record Field Description Source indentSpaces Specifies how many spaces are used as indentation in the output YAML Default: 2 multiLineRelativeIndent If set to true the indent of multi-line strings is calculated against the parent YAML node and excessive leading spaces get collapsed Default: true Static members Static member Description Source RenderOptions.Default Default render options Returns: RenderOptions","title":"Yzl core yzl renderoptions"},{"location":"reference/yzl-core-yzl-renderoptions/#yzlrenderoptions-type","text":"Namespace: Yzl.Core Assembly: Yzl.dll Parent Module: Yzl Base Type: obj All Interfaces: IEquatable < RenderOptions > , IStructuralEquatable , IComparable < RenderOptions > , IComparable , IStructuralComparable YAML rendering options","title":"Yzl.RenderOptions Type"},{"location":"reference/yzl-core-yzl-renderoptions/#record-fields","text":"Record Field Description Source indentSpaces Specifies how many spaces are used as indentation in the output YAML Default: 2 multiLineRelativeIndent If set to true the indent of multi-line strings is calculated against the parent YAML node and excessive leading spaces get collapsed Default: true","title":"Record fields"},{"location":"reference/yzl-core-yzl-renderoptions/#static-members","text":"Static member Description Source RenderOptions.Default Default render options Returns: RenderOptions","title":"Static members"},{"location":"reference/yzl-core-yzl-scalar/","text":"Yzl.Scalar Type Namespace: Yzl.Core Assembly: Yzl.dll Parent Module: Yzl Base Type: obj All Interfaces: IEquatable < Scalar > , IStructuralEquatable , IComparable < Scalar > , IComparable , IStructuralComparable YAML scalar types Union cases Union case Description Source Bool bool Parameters Item : bool Float double Parameters Item : double Int int Parameters Item : int Str Str Parameters Item : Str","title":"Yzl core yzl scalar"},{"location":"reference/yzl-core-yzl-scalar/#yzlscalar-type","text":"Namespace: Yzl.Core Assembly: Yzl.dll Parent Module: Yzl Base Type: obj All Interfaces: IEquatable < Scalar > , IStructuralEquatable , IComparable < Scalar > , IComparable , IStructuralComparable YAML scalar types","title":"Yzl.Scalar Type"},{"location":"reference/yzl-core-yzl-scalar/#union-cases","text":"Union case Description Source Bool bool Parameters Item : bool Float double Parameters Item : double Int int Parameters Item : int Str Str Parameters Item : Str","title":"Union cases"},{"location":"reference/yzl-core-yzl-str/","text":"Yzl.Str Type Namespace: Yzl.Core Assembly: Yzl.dll Parent Module: Yzl Base Type: obj All Interfaces: IEquatable < Str > , IStructuralEquatable , IComparable < Str > , IComparable , IStructuralComparable YAML string types Union cases Union case Description Source DoubleQuoted string YAML double-quoted string Parameters Item : string Folded string YAML > string Parameters Item : string FoldedKeep string YAML >+ string Parameters Item : string FoldedStrip string YAML >- string Parameters Item : string Literal string YAML | string Parameters Item : string LiteralKeep string YAML |+ string Parameters Item : string LiteralStrip string YAML |- string Parameters Item : string Plain string YAML plain string Parameters Item : string SingleQuoted string YAML single-quoted string Parameters Item : string Static members Static member Description Source op_Implicit source Parameters source : Str Returns: Str op_Implicit source Parameters source : string Returns: Str","title":"Yzl core yzl str"},{"location":"reference/yzl-core-yzl-str/#yzlstr-type","text":"Namespace: Yzl.Core Assembly: Yzl.dll Parent Module: Yzl Base Type: obj All Interfaces: IEquatable < Str > , IStructuralEquatable , IComparable < Str > , IComparable , IStructuralComparable YAML string types","title":"Yzl.Str Type"},{"location":"reference/yzl-core-yzl-str/#union-cases","text":"Union case Description Source DoubleQuoted string YAML double-quoted string Parameters Item : string Folded string YAML > string Parameters Item : string FoldedKeep string YAML >+ string Parameters Item : string FoldedStrip string YAML >- string Parameters Item : string Literal string YAML | string Parameters Item : string LiteralKeep string YAML |+ string Parameters Item : string LiteralStrip string YAML |- string Parameters Item : string Plain string YAML plain string Parameters Item : string SingleQuoted string YAML single-quoted string Parameters Item : string","title":"Union cases"},{"location":"reference/yzl-core-yzl-str/#static-members","text":"Static member Description Source op_Implicit source Parameters source : Str Returns: Str op_Implicit source Parameters source : string Returns: Str","title":"Static members"},{"location":"reference/yzl-core-yzl/","text":"Yzl Module Namespace: Yzl.Core Assembly: Yzl.dll Types Type Description Source Name Represents the key in a YAML key-value pair NamedNode YAML key-value pair Node YAML node types RenderOptions YAML rendering options Scalar YAML scalar types Str YAML string types Functions and values Function or value Description Source Yzl.augment x Augments a given object to a Node Possible augmentations are specified as implicit casts of the Node type Parameters x : ^a Returns: ^b Yzl.boolean name value Creates a named boolean scalar node Parameters name : string value : bool Returns: NamedNode Yzl.float name value Creates a named float scalar node Parameters name : string value : double Returns: NamedNode Yzl.int name value Creates a named integer scalar node Parameters name : string value : int Returns: NamedNode Yzl.map name map Creates a named map node Parameters name : string map : NamedNode list Returns: NamedNode Yzl.none Creates an empty node Typically used when generating YAML tree conditionally to indicate no node should be generated Returns: NamedNode Yzl.render yaml Renders Yzl tree into YAML with the default RenderOptions Parameters yaml : Node Returns: string Example Render an Yzl node: ! 5 |> Yzl.render Yzl.renderYaml opts yaml Renders Yzl tree into YAML Parameters opts : RenderOptions yaml : Node Returns: string Yzl.seq name seq Creates a named sequence node Parameters name : string seq : Node list Returns: NamedNode Yzl.str name node Creates a named string scalar node Parameters name : string node : ^a Returns: NamedNode","title":"Yzl core yzl"},{"location":"reference/yzl-core-yzl/#yzl-module","text":"Namespace: Yzl.Core Assembly: Yzl.dll","title":"Yzl Module"},{"location":"reference/yzl-core-yzl/#types","text":"Type Description Source Name Represents the key in a YAML key-value pair NamedNode YAML key-value pair Node YAML node types RenderOptions YAML rendering options Scalar YAML scalar types Str YAML string types","title":"Types"},{"location":"reference/yzl-core-yzl/#functions-and-values","text":"Function or value Description Source Yzl.augment x Augments a given object to a Node Possible augmentations are specified as implicit casts of the Node type Parameters x : ^a Returns: ^b Yzl.boolean name value Creates a named boolean scalar node Parameters name : string value : bool Returns: NamedNode Yzl.float name value Creates a named float scalar node Parameters name : string value : double Returns: NamedNode Yzl.int name value Creates a named integer scalar node Parameters name : string value : int Returns: NamedNode Yzl.map name map Creates a named map node Parameters name : string map : NamedNode list Returns: NamedNode Yzl.none Creates an empty node Typically used when generating YAML tree conditionally to indicate no node should be generated Returns: NamedNode Yzl.render yaml Renders Yzl tree into YAML with the default RenderOptions Parameters yaml : Node Returns: string Example Render an Yzl node: ! 5 |> Yzl.render Yzl.renderYaml opts yaml Renders Yzl tree into YAML Parameters opts : RenderOptions yaml : Node Returns: string Yzl.seq name seq Creates a named sequence node Parameters name : string seq : Node list Returns: NamedNode Yzl.str name node Creates a named string scalar node Parameters name : string node : ^a Returns: NamedNode","title":"Functions and values"},{"location":"reference/yzl-core/","text":"Yzl.Core Namespace Yzl core modules Modules Description Source Operators Yzl","title":"Yzl core"},{"location":"reference/yzl-core/#yzlcore-namespace","text":"Yzl core modules Modules Description Source Operators Yzl","title":"Yzl.Core Namespace"}]}